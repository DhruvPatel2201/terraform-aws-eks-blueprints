name: e2e-parallel-destroy-only

on:
  workflow_dispatch:
    inputs:
      TFDestroy:
        description: 'Destroy TF Automatically (false/true) - Default: true'
        required: true
        default: 'true'

concurrency: e2e-parallel-destroy

jobs:
  getExampleDirectories:
    name: Get example directories
    runs-on: ubuntu-latest
    outputs:
      directories: ${{ steps.dirs.outputs.directories }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get Terraform directories for evaluation
        id: dirs
        run: |
          DIRS=$(python3 .github/scripts/plan-examples.py)
          echo "directories=$DIRS" >> $GITHUB_OUTPUT

  deploy:
    name: Run e2e test
    runs-on: ubuntu-latest
    needs: getExampleDirectories

    # These permissions are needed to interact with GitHub's OIDC Token endpoint.
    permissions:
      id-token: write
      contents: read
    strategy:
      fail-fast: false
      matrix:
        directory: ${{ fromJson(needs.getExampleDirectories.outputs.directories) }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup backend
        # Un-comment remote backend for use in workflow
        run: sed -i "s/# //g" ${{ matrix.directory }}/versions.tf

      - name: Auth AWS
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          role-to-assume: ${{ secrets.ROLE_TO_ASSUME }}
          aws-region: us-west-2
          role-duration-seconds: 3600
          role-session-name: GithubActions-Session

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.0.0

      - name: Terraform Destroy
        working-directory: ${{ matrix.directory }}
        run: |
          terraform init -upgrade=true
          terraform destroy -target=module.eks_blueprints_kubernetes_addons  -no-color -input=false -auto-approve
          terraform destroy -target=module.eks_blueprints  -no-color -input=false -auto-approve
          terraform destroy -target=module.eks -no-color -input=false -auto-approve
          terraform destroy -no-color -input=false -auto-approve
